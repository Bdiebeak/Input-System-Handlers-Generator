using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;
using Bdiebeak.InputSystemGeneration;
using System.Linq;

// <auto-generated>
// 
// !!!!!!!
// WARNING : THIS CODE WAS GENERATED BY A TOOL. CHANGE IT CAREFULLY.
// !!!!!!!
// 
// This is an Input handler which uses InputAction class to work with PlayerInput.
// It has more more flexibility than MessagesHandler because we can use InputAction's functions.
// E.g. Jump.triggered or Sprint.inProgress.
// 
// </auto-generated>
[RequireComponent(typeof(PlayerInput))]
public class PlayerActionsReader : PlayerInputActions
{
	private PlayerInput _playerInput;
	private Dictionary<PlayerActions, InputAction> _inputActions;

	private void Update()
	{
		// This initialization is handled in Update because Unity Input System's documentation says do it.
		// https://docs.unity3d.com/Packages/com.unity.inputsystem@1.3/api/UnityEngine.InputSystem.PlayerInput.html
		if (_playerInput == null || _inputActions == null) Reinitialize();
		HandleInput();
	}

	private void Reinitialize()
	{
		_playerInput = GetComponent<PlayerInput>();
		_inputActions = new Dictionary<PlayerActions, InputAction>();
		foreach (var actionValue in (PlayerActions[]) Enum.GetValues(typeof(PlayerActions)))
		{
			var requiredActionName = actionValue.ToString();
			var actionToAdd = _playerInput.actions.FirstOrDefault(x => string.Equals(x.name.ToCamelCase(), requiredActionName));
			if (actionToAdd == null)
			{
				Debug.LogError($"Can't find required \"{requiredActionName}\" Action in Map.");
				continue;
			}

			_inputActions.Add(actionValue, actionToAdd);
		}
	}

	private void HandleInput()
	{
		MovementValue = _inputActions[PlayerActions.Movement].ReadValue<Vector2>();
		LookValue = _inputActions[PlayerActions.Look].ReadValue<Vector2>();
		JumpValue = _inputActions[PlayerActions.Jump].triggered; // You can use any input which you need (e.g. inProgress, wasPressedThisFrame and etc.)
		IsSprintingValue = _inputActions[PlayerActions.IsSprinting].inProgress;
	}
}
